spring.application.name=villigo

# 데이터베이스 연결 정보
spring.datasource.url=${SUPABASE_URL}
spring.datasource.username=${SUPABASE_USERNAME}
spring.datasource.password=${SUPABASE_PW}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
# 15초 이상 사용된 커넥션 로그 출력
spring.datasource.hikari.leak-detection-threshold=15000  
# 3초 이내 커넥션 유효성 검사
spring.datasource.hikari.validation-timeout=3000


spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# AWS S3 연결 정보
aws.accessKey=${AWS_ACCESS_KEY_ID}
aws.secretKey=${AWS_SECRET_ACCESS_KEY}
aws.region=${AWS_REGION}
aws.s3.bucket=${AWS_BUCKET_NAME}


# JPA/Hibernate DDL(create, alter, drop, truncate) 자동 실행을 비활성화
# drop table, create table을 실행하지 않음.
spring.jpa.hibernate.ddl-auto=none

# JPA/Hibernate에서 생성된 SQL을 로그에서 예쁘게 출력.
spring.jpa.properties.hibernate.format_sql=true
# JPA/Hiber에서 SQL을 로그 출력할 때 syntax coloring을 제공.
spring.jpa.properties.hibernate.highlight_sql=true

# JPA/Hibernate 네이밍 전략 수정: 테이블 이름을 대문자로 처리
spring.jpa.hibernate.naming.physical-strategy=com.splusz.villigo.strategy.CustomNamingStrategy

# log4j2 로그 레벨(trace < debug < info < warn < error) 설정
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace

# 정적 리소스 경로 설정 (Spring Boot가 static 폴더를 인식하도록 설정)
spring.web.resources.static-locations=classpath:/static/

# CSS, JS 변경 시 즉시 반영되도록 캐시 비활성화
spring.web.resources.cache.period=0

# 파일 첨부 경로 
#file.upload-dir=C:/villigo_images

# 구글 로그인 OAuth 설정
spring.security.oauth2.client.registration.google.client-id=${OAuth_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAuth_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${OAuth_GOOGLE_SCOPE}
spring.security.oauth2.client.registration.google.redirect-uri=${OAuth_GOOGLE_REDIRECT_URI}

# Spring Security 로그 레벨 설정
#logging.level.org.springframework.security=debug

# Kakao API
kakao.restapi=${KAKAO_RESTAPI_KEY}

# 파일 업로드 최대 허용 크기 → 100MB → 20MB
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# Tomcat 서블릿 컨테이너 기본 제한
server.tomcat.max-http-post-size=20MB
server.tomcat.max-swallow-size=20MB
